server:
  port: 20201
spring:
  application:
    name: one
  main:
    # 解决bean重复定义的。设置为true时，后定义的bean会覆盖之前定义的相同名称的bean
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        # 服务器地址
        server-addr: 127.0.0.1:8848
        enabled: true
        register-enabled: true
      config:
        enabled: true
        refresh-enabled: true
        server-addr: 127.0.0.1:8848
    sentinel:
      transport:
        dashboard: 127.0.0.1:8080
  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/zz?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT&allowPublicKeyRetrieval=true
      username: root
      password: a111
      # 初始化连接数
      initial-size: 10
      # 最小空闲连接
      min-idle: 5
      # 最大连接数
      max-active: 20
      # 最大等待时间
      max-wait: 3000
      # 指明是否从池中取出连接前进行校验，校验失败则从池中去除并尝试获取另一个
      test-on-borrow: true
      # 指明是否归还到池中需要校验
      test-on-return: false
      # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
      test-while-idle: false
      filters: stat,wall
      filter:
        stat:
          enabled: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 1
      # url监控
      web-stat-filter:
        enabled: true
        # 启用session统计
        session-stat-enable: true
        exclusions:
          - "*.js"
          - "*.gif"
          - "*.jpg"
          - "*.png"
          - "*.css"
          - "*.ico"
          - "/druid/*"
      # 监控信息   localhost:${server.port}/druid/login.html
      stat-view-servlet:
        # sql监控开关
        enabled: true
        allow: ""
        url-pattern: /druid/*
        login-username: zz
        login-password: zz
        reset-enable: false
  redis:
    database: 0
    host: 192.168.10.121
    password: 123456
    port: 6379
    timeout: 1200
    pool:
      max-active: 8
      max-idle: 8
      max-wait: -1
      min-idle: 0
  # 监控
  boot:
    admin:
      client:
        url: 127.0.0.1:8094
        username: zz
        password: zz
# 端点检查
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
mybatis-plus:
  global-config:
    db-config:
      id-type: auto
    field-strategy: not_empty
    #驼峰下划线转换
    column-underline: true
    #逻辑删除配置
    logic-delete-value: 0
    logic-not-delete-value: 1
    db-type: mysql
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
  mapper-locations: classpath*:mapper/*mapper.xml
#swagger:
#  basic: false
#  username: root
#  password: root
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
# 将所有数字转为 String 类型返回，避免前端数据精度丢失的问题
jackson:
  generator:
    write-numbers-as-strings: true
#logging:
#  config: classpath:log.xml
seata:
  enabled: true
  # 默认
  data-source-proxy-mode: AT
  # 事务群组（每个服务可以独立取名，也可以使用相同名字）
  tx-service-group: one
  registry:
    type: nacos
    nacos:
      server-addr: 127.0.0.1:8848
      cluster: default
      group: DEFAULT_GROUP
      application: seata-server


